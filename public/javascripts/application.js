// Generated by CoffeeScript 1.3.1
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor; child.__super__ = parent.prototype; return child; },
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  jQuery(function() {
    var route;
    window.LocalNightly = {
      Model: {},
      View: {},
      Collection: {},
      Router: {}
    };
    LocalNightly.Model.Event = (function(_super) {

      __extends(Event, _super);

      Event.name = 'Event';

      function Event() {
        return Event.__super__.constructor.apply(this, arguments);
      }

      return Event;

    })(Backbone.Model);
    LocalNightly.Collection.Events = (function(_super) {
      var curr, lastweek_date, todays_date;

      __extends(Events, _super);

      Events.name = 'Events';

      function Events() {
        return Events.__super__.constructor.apply(this, arguments);
      }

      Events.prototype.model = LocalNightly.Model.Event;

      Events.prototype.comparator = function(e) {
        return e.get('start_date');
      };

      curr = new Date();

      todays_date = "" + (curr.getFullYear()) + "-" + (curr.getMonth() + 1) + "-" + (curr.getDate());

      lastweek_date = "" + (curr.getFullYear()) + "-" + (curr.getMonth() + 1) + "-" + (curr.getDate() + 4);

      Events.prototype.today = function() {
        return this.filter(function(event) {
          return (event.get('start_date')) === todays_date;
        });
      };

      Events.prototype.next_events = function() {
        return this.filter(function(event) {
          return (event.get('start_date')) <= lastweek_date;
        });
      };

      Events.prototype.all_events = function() {
        return this.filter(function(event) {
          return (event.get('start_date')) !== null;
        });
      };

      return Events;

    })(Backbone.Collection);
    LocalNightly.Model.Information = (function(_super) {

      __extends(Information, _super);

      Information.name = 'Information';

      function Information() {
        return Information.__super__.constructor.apply(this, arguments);
      }

      return Information;

    })(Backbone.Model);
    LocalNightly.View.Master = (function(_super) {

      __extends(Master, _super);

      Master.name = 'Master';

      function Master() {
        this.all = __bind(this.all, this);
        return Master.__super__.constructor.apply(this, arguments);
      }

      Master.prototype.el = 'body';

      Master.prototype.initialize = function() {
        var events, location,
          _this = this;
        $(document).scroll(function() {
          var position;
          position = $(document).scrollTop();
          if (position !== 0) {
            return $('#logo').fadeOut('slow');
          } else {
            return $('#logo').fadeIn('slow');
          }
        });
        location = this.options;
        events = new LocalNightly.Collection.Events;
        events.url = "/api/" + location;
        events.fetch({
          success: function() {
            console.log(':)');
            _this.raw = events;
            return _this.render(events);
          },
          error: function() {
            return console.log(':(');
          }
        });
        return window.filtered = new LocalNightly.Collection.Events;
      };

      Master.prototype.render = function(data) {
        var mapp, sidebar;
        sidebar = new LocalNightly.View.Sidebar({
          collection: data
        });
        return mapp = new LocalNightly.View.Map({
          collection: data
        });
      };

      Master.prototype.today = function() {
        filtered.reset(this.raw.today());
        return this.render(filtered);
      };

      Master.prototype.next = function() {
        filtered.reset(this.raw.next_events());
        return this.render(filtered);
      };

      Master.prototype.all = function() {
        filtered.reset(this.raw.all_events());
        return this.render(filtered);
      };

      Master.prototype.events = {
        'click #today': 'today',
        'click #next': 'next',
        'click #all': 'all'
      };

      return Master;

    })(Backbone.View);
    LocalNightly.View.DialogBox = (function(_super) {

      __extends(DialogBox, _super);

      DialogBox.name = 'DialogBox';

      function DialogBox() {
        return DialogBox.__super__.constructor.apply(this, arguments);
      }

      DialogBox.prototype.el = "#dialog";

      DialogBox.prototype.initialize = function() {
        console.log('hllo');
        return $('#where').change(function() {
          return window.location.href = $(this).val();
        });
      };

      return DialogBox;

    })(Backbone.View);
    /*
    	class LocalNightly.View.Container extends Backbone.View
    		el: '#container'
    		initialize: ->
    			@render()
    		render: ->
    			$(@el).empty()
    			$(@el).append '<ul></ul>'
    			console.log(events)
    			events.each (e) =>
    				@appendImage e
    
    		appendImage: (event) =>
    			image_view = new LocalNightly.View.Image({model: event})
    			$('ul').append(image_view.render().el)
    	
    	class LocalNightly.View.Image extends Backbone.View
    		tagName: 'li'
    
    		render: ->
    			$(@el).html("<img class='image' src=#{@model.get('picture_url')} />")
    			@
    		test: ->
    			#$(@el).fadeOut()
    			console.log('hit')
    			height = window.innerHeight || document.body.clientHeight
    			console.log height
    			$('#fixed').css 'height', height
    			$('#fixed').animate
    				width: '50%'
    				opacity: 1
    			, 200, "linear", =>
    				@info()
    		
    		info: ->
    			$('#picture').html "<img src=#{@model.get 'picture_url'} />"
    			$('#id').html @model.get 'picture_id'
    			$('#name').html @model.get 'name'
    			$('#startdate').html @model.get 'start_date'
    			$('#lat').html @model.get 'latitude'
    			$('#long').html @model.get 'longitude'
    			$('#link').html "<a href=#{@model.get 'facebook_url'}>link</a>"
    			$('#mapview').html "<img src='http://maps.googleapis.com/maps/api/staticmap?center=#{@model.get 'latitude'},#{@model.get 'longitude'}&zoom=14&size=200x200&sensor=false'>"
    
    			information = new LocalNightly.Model.Information
    			information.url = @model.get 'facebook_url'
    			console.log information.fetch()
    			information.fetch
    				success: =>
    					id = information.get 'venue'
    					$('#desc').html information.get 'description'
    					$('#venueid').html id['id']
    					console.log "https://graph.facebook.com/#{id['id']}"
    				error: ->
    					console.log ':(('
    
    			$('#fixed').delay(4000).animate {opacity: 0, width:0}
    
    		events:
    			'click .image' : 'test'
    */

    LocalNightly.View.Sidebar = (function(_super) {

      __extends(Sidebar, _super);

      Sidebar.name = 'Sidebar';

      function Sidebar() {
        return Sidebar.__super__.constructor.apply(this, arguments);
      }

      Sidebar.prototype.el = '#sidebar';

      Sidebar.prototype.initialize = function() {
        console.log('sidebar!');
        $('#content').html('<ul></ul>');
        return this.render();
      };

      Sidebar.prototype.render = function() {
        var _this = this;
        return this.collection.each(function(e) {
          var cond, sidebarlist;
          sidebarlist = new LocalNightly.View.SidebarList({
            model: e
          });
          $('ul').append(sidebarlist.render().el);
          cond = function() {
            console.log($("#" + e.cid).width());
            console.log($("#" + e.cid).height());
            console.log('----');
            if ($("#" + e.cid).width() === 200 || 0) {
              return $("#" + e.cid).attr("src", "../images/local.png");
            }
          };
          return setTimeout(cond, 1000);
        });
      };

      return Sidebar;

    })(Backbone.View);
    LocalNightly.View.SidebarList = (function(_super) {

      __extends(SidebarList, _super);

      SidebarList.name = 'SidebarList';

      function SidebarList() {
        return SidebarList.__super__.constructor.apply(this, arguments);
      }

      SidebarList.prototype.tagName = 'li';

      SidebarList.prototype.render = function() {
        $(this.el).html("<img id=" + this.model.cid + " class='image' src=" + (this.model.get('picture_url')) + " /><br/> " + (this.model.get('name')));
        return this;
      };

      /*
      		test: =>
      			$('#map_header').slideDown()
      			$('#map_header #picture').html "<img src=#{@model.get 'picture_url'} />"
      			$('#map_header #id').html @model.get 'picture_id'
      			$('#map_header #name').html @model.get 'name'
      
      			information = new LocalNightly.Model.Information
      			information.url = @model.get 'facebook_url'
      			console.log information.fetch()
      			information.fetch
      				success: =>
      					id = information.get 'venue'
      					$('#map_header #desc').html information.get 'description'
      					$('#map_header #venueid').html id['id']
      					console.log "https://graph.facebook.com/#{id['id']}"
      				error: ->
      					console.log ':(('
      		events: 
      			'hover .image': 'test'
      */


      return SidebarList;

    })(Backbone.View);
    LocalNightly.View.Map = (function(_super) {

      __extends(Map, _super);

      Map.name = 'Map';

      function Map() {
        this.render = __bind(this.render, this);
        return Map.__super__.constructor.apply(this, arguments);
      }

      Map.prototype.el = '#map_canvas';

      Map.prototype.initialize = function() {
        var myOptions;
        myOptions = {
          center: new google.maps.LatLng(0, 0),
          zoom: 13,
          mapTypeId: google.maps.MapTypeId.ROADMAP
        };
        this.map = new google.maps.Map(document.getElementById("map_canvas"), myOptions);
        return this.render();
      };

      Map.prototype.render = function() {
        var _this = this;
        console.log('call');
        this.latlngbounds = new google.maps.LatLngBounds();
        this.infowindow = new google.maps.InfoWindow;
        console.log(this.collection);
        this.collection.each(function(e) {
          var contentString, latitude, longitude, marker, markerObj;
          latitude = e.get('latitude');
          longitude = e.get('longitude');
          markerObj = document.getElementById("" + e.cid);
          contentString = "<img src=" + (e.get('picture_url')) + " /><br/>								" + (e.get('name')) + "<br/>								" + (e.get('start_date'));
          marker = new google.maps.Marker({
            position: new google.maps.LatLng(latitude, longitude),
            map: _this.map,
            title: e.get('name')
          }, _this.latlngbounds.extend(new google.maps.LatLng(latitude, longitude)));
          google.maps.event.addListener(marker, "click", function() {
            return infowindow.open(this.map, this);
          });
          return google.maps.event.addDomListener(markerObj, "mouseover", function() {
            _this.infowindow.setContent(contentString);
            _this.infowindow.open(_this.map, marker);
            return _this.map.panTo(marker.getPosition());
          });
        });
        return this.map.fitBounds(this.latlngbounds);
      };

      return Map;

    })(Backbone.View);
    LocalNightly.Router.Route = (function(_super) {

      __extends(Route, _super);

      Route.name = 'Route';

      function Route() {
        return Route.__super__.constructor.apply(this, arguments);
      }

      Route.prototype.routes = {
        "": 'home',
        "nyc": "nyc",
        "lasvegas": "lasvegas"
      };

      Route.prototype.home = function() {
        var dialogbox;
        return dialogbox = new LocalNightly.View.DialogBox;
      };

      Route.prototype.nyc = function() {
        var container;
        $('#container').hide();
        $('#container').delay(4000).fadeIn('slow');
        return container = new LocalNightly.View.Master('nyc');
      };

      Route.prototype.lasvegas = function() {
        var container;
        $('#container').hide();
        $('#container').delay(4000).fadeIn('slow');
        return container = new LocalNightly.View.Master('lasvegas');
      };

      return Route;

    })(Backbone.Router);
    route = new LocalNightly.Router.Route;
    return Backbone.history.start({
      pushState: true
    });
  });

}).call(this);
